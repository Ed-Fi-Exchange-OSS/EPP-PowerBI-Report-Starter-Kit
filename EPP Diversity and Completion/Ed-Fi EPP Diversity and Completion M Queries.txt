---CANDIDATE 
let
    Source = Sql.Database(".", "EdFi_Ods_Populated_Sandbox", [Query="--CANDIDATE #(lf)SELECT c.CandidateIdentifier#(lf)#(tab)#(tab),c.FirstName#(lf)#(tab)#(tab),c.LastSurname#(lf)#(tab)#(tab),c.SexDescriptorId#(lf)#(tab)#(tab),rd.RaceDescriptorId#(lf)#(tab)#(tab),c.HispanicLatinoEthnicity#(lf)#(tab)#(tab),c.EconomicDisadvantaged#(lf)#(tab)#(tab),ccy.SchoolYear as Cohort#(lf)#(tab)#(tab),c.ProgramComplete#(lf)#(tab)#(tab),s.StudentUSI#(lf)#(tab)#(tab),epp.ProgramName#(lf)#(tab)#(tab),epp.BeginDate#(lf)#(tab)#(tab),epp.EducationOrganizationId#(lf)#(tab)#(tab),c.PersonId#(lf)#(tab)#(tab),cred.Credentialed#(lf)FROM tpdm.Candidate c#(lf)JOIN tpdm.CandidateEducatorPreparationProgramAssociation epp on epp.CandidateIdentifier = c.CandidateIdentifier#(lf)LEFT JOIN tpdm.CandidateRace rd on rd.CandidateIdentifier = c.CandidateIdentifier#(lf)LEFT JOIN edfi.Descriptor d on d.DescriptorId = rd.RaceDescriptorId#(lf)LEFT JOIN edfi.Student s on s.PersonId = c.PersonId#(lf)LEFT JOIN tpdm.CandidateCohortYear ccy on ccy.CandidateIdentifier = c.CandidateIdentifier#(lf)LEFT JOIN dbo.Credentialed cred on cred.CandidateIdentifier = c.CandidateIdentifier"]),
    #"Changed Type" = Table.TransformColumnTypes(Source,{{"CandidateIdentifier", Text.Type}, {"RaceDescriptorId", Int64.Type}, {"Cohort", type text}}),
    #"Replaced Value" = Table.ReplaceValue(#"Changed Type",null,11436,Replacer.ReplaceValue,{"RaceDescriptorId"}),
    #"Changed Type1" = Table.TransformColumnTypes(#"Replaced Value",{{"Cohort", Int64.Type}}),
    #"Added Conditional Column" = Table.AddColumn(#"Changed Type1", "Cohort Sort", each if [Cohort] = null then 1 else if [Cohort] = 2014 then 2 else if [Cohort] = 2015 then 3 else if [Cohort] = 2016 then 4 else if [Cohort] = 2017 then 5 else if [Cohort] = 2018 then 6 else if [Cohort] = 2019 then 7 else null),
    #"Changed Type2" = Table.TransformColumnTypes(#"Added Conditional Column",{{"Cohort Sort", Int64.Type}, {"Credentialed", type text}, {"ProgramComplete", type text}}),
    #"Replaced Value1" = Table.ReplaceValue(#"Changed Type2","false","Not Certified",Replacer.ReplaceValue,{"Credentialed"}),
    #"Replaced Value2" = Table.ReplaceValue(#"Replaced Value1","true","Certified",Replacer.ReplaceValue,{"Credentialed"}),
    #"Replaced Value3" = Table.ReplaceValue(#"Replaced Value2","true","Complete",Replacer.ReplaceValue,{"ProgramComplete"}),
    #"Replaced Value4" = Table.ReplaceValue(#"Replaced Value3","false","Incomplete",Replacer.ReplaceValue,{"ProgramComplete"}),
    #"Added Conditional Column1" = Table.AddColumn(#"Replaced Value4", "ProgramNameSort", each if Text.StartsWith([ProgramName], "All Level") then 1 else if Text.StartsWith([ProgramName], "Elementary") then 2 else if Text.StartsWith([ProgramName], "Middle School") then 3 else if Text.StartsWith([ProgramName], "High School") then 4 else null),
    #"Changed Type3" = Table.TransformColumnTypes(#"Added Conditional Column1",{{"ProgramNameSort", Int64.Type}}),
    #"Removed Duplicates" = Table.Distinct(#"Changed Type3"),
    #"Added Custom" = Table.AddColumn(#"Removed Duplicates", "FullName", each [FirstName]&" "&[LastSurname]),
    #"Changed Type4" = Table.TransformColumnTypes(#"Added Custom",{{"FullName", type text}}),
    #"Renamed Columns" = Table.RenameColumns(#"Changed Type4",{{"Credentialed", "Certification Status"}})
in
    #"Renamed Columns"

--------------------------------------------------------------
--------------------------------------------------------------

---EPP
let
    Source = Sql.Database(".", "EdFi_Ods_Populated_Template_RW_20210209", [Query="---EPP#(lf)SELECT EducationOrganizationId#(lf)#(tab)#(tab),NameOfInstitution #(lf)#(tab)FROM edfi.EducationOrganization"])
in
    Source

--------------------------------------------------------------
--------------------------------------------------------------


---Race
let
    Source = Sql.Database(".", "EdFi_Ods_Populated_Template_RW_20210226", [Query="---Race Dimension#(lf)SELECT rd.RaceDescriptorId#(lf)#(tab)#(tab),d.CodeValue #(lf)#(tab)FROM [edfi].[RaceDescriptor] rd#(lf)#(tab)LEFT OUTER JOIN edfi.Descriptor d on d.DescriptorId = rd.RaceDescriptorId"]),
    #"Renamed Columns" = Table.RenameColumns(Source,{{"CodeValue", "Race"}}),
    #"Changed Type" = Table.TransformColumnTypes(#"Renamed Columns",{{"RaceDescriptorId", Int64.Type}})
in
    #"Changed Type"

--------------------------------------------------------------
--------------------------------------------------------------

---Sex
let
    Source = Sql.Database(".", "EdFi_Ods_Populated_Template_RW_20210209", [Query="---Sex#(lf)SELECT S.SexDescriptorId#(lf)#(tab)#(tab), D.CodeValue #(lf)#(tab)FROM edfi.SexDescriptor S#(lf)#(tab)LEFT JOIN edfi.Descriptor d on d.DescriptorId = S.SexDescriptorId"]),
    #"Renamed Columns" = Table.RenameColumns(Source,{{"CodeValue", "Sex"}})
in
    #"Renamed Columns"

--------------------------------------------------------------
--------------------------------------------------------------

---Financial Aid
let
	Source = Sql.Database(".", "EdFi_Ods_Populated_Template_RW_20210209", [Query="---Financial Aid#(lf)SELECT a.CandidateIdentifier#(lf)#(tab)#(tab),a.BeginDate#(lf)#(tab)#(tab),a.EndDate#(lf)#(tab)#(tab),a.AidConditionDescription#(lf)#(tab)#(tab),d.CodeValue as AidType#(lf)#(tab)#(tab),a.AidAmount#(lf)#(tab)#(tab),a.PellGrantRecipient#(lf)  FROM tpdm.CandidateAid a#(lf)  LEFT OUTER JOIN edfi.Descriptor d on a.AidTypeDescriptorId = d.DescriptorId"]),
	#"Changed Type" = Table.TransformColumnTypes(Source,{{"BeginDate", type date}, {"EndDate", type date}, {"CandidateIdentifier", type number}}),
	#"Replaced Value" = Table.ReplaceValue(#"Changed Type",null,false,Replacer.ReplaceValue,{"PellGrantRecipient"})
in
    #"Replaced Value"

--------------------------------------------------------------
--------------------------------------------------------------

---EVALUATION RATING RESULT
let
    Source = Sql.Database(".", "EdFi_Ods_Populated_Template_RW_20210209", [Query="---EVALUATION RATING RESULT#(lf)SELECT c.CandidateIdentifier#(lf)#(tab)#(tab),err.EvaluationDate#(lf)#(tab)#(tab),err.EvaluationTitle#(lf)#(tab)#(tab),err.Rating#(lf)#(tab)#(tab),err.RatingResultTitle#(lf)#(tab)FROM tpdm.EvaluationRatingResult err#(lf)#(tab)JOIN tpdm.Candidate c on err.PersonId = c.PersonId"]),
    #"Filtered Rows" = Table.SelectRows(Source, each ([RatingResultTitle] = "Overall Score"))
in
    #"Filtered Rows"

--------------------------------------------------------------
--------------------------------------------------------------